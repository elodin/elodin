{
  "name": "Elodin",
  "scopeName": "source.elo",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "comment.elodin",
          "match": "(#.*)"
        },
        {
          "name": "constant.variable.elodin",
          "match": "(?<=hex\\()\\s*([A-Fa-f0-9]+)"
        },
        {
          "name": "keyword.control.elodin",
          "match": "(style|variant|fragment)(?=\\s+)"
        },
        {
          "name": "entity.name.function.elodin",
          "match": "([a-z]+)(?=(\\s*\\())"
        },
        {
          "name": "constant.variable.elodin",
          "match": "([a-z]+[A-Za-z]*)"
        },
        {
          "name": "entity.name.class.elodin",
          "match": "([A-Z]+[A-Za-z]*)(?=(\\s*\\=))"
        },
        {
          "name": "entity.name.class.elodin",
          "match": "(?<=variant)\\s*([A-Z]+[A-Za-z]*)"
        },
        {
          "name": "entity.name.class.elodin",
          "match": "(?<=\\[)\\s*([A-Z]+[A-Za-z]*)"
        },
        {
          "name": "entity.name.class.elodin",
          "match": "(?<=style)\\s*([A-Z]+[A-Za-z]*)"
        },
        {
          "name": "constant.character.elodin",
          "match": "([A-Z]+[A-Za-z]*)(?=\\s*\\])"
        },
        {
          "name": "constant.character.elodin",
          "match": "([A-Z]+[A-Za-z]*)"
        },
        {
          "name": "emphasis.raw.elodin",
          "match": "(__[a-zA-Z]+)"
        },
        {
          "name": "constant.numeric.elodin",
          "match": "(\\d+)"
        },
        {
          "name": "variable.language.elodin",
          "match": "((\\$|\\@)[a-zA-Z_]+)"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.elodin",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.elodin",
          "match": "\\\\."
        }
      ]
    }
  }
}
